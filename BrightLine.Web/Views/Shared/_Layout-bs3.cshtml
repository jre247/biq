@using BrightLine.Common.Framework
@using BrightLine.Common.Utility.Authentication
@using BrightLine.Web
@using BrightLine.Common.Services
@{
	var settings = IoC.Resolve<ISettingsService>();
	var users = IoC.Resolve<IUserService>();
    var user = BrightlineHtmlHelper.JsonSerializeToString(users.GetUserInfo(Auth.UserModel));
    var isDeveloper = Auth.IsUserInAnyRole(AuthConstants.Roles.Developer);
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@(!string.IsNullOrEmpty(ViewBag.Title) ? string.Format("{0} - ", ViewBag.Title) : "")BrightLine</title>
    <link rel="shortcut icon" href="/Content/img/favicon.ico">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400italic,600italic,400,600" rel="stylesheet">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" rel="stylesheet">
  
    @Styles.Render("~/css/assets")
    @RenderSection("styles", required: false)

    <script> var _blenv = '@Env.Name.ToLower()' </script>
    <script>
        var _bl = _bl || {};
        _bl.user = @user;
        _bl.serverUtcTime = '@DateTime.UtcNow.ToString()';
        @if (HttpContext.Current.User != null && HttpContext.Current.User.Identity.IsAuthenticated)
            {
                <text>_bl.user.IdentityName = '@HttpContext.Current.User.Identity.Name';</text>
            }else{
               <text> _bl.user.IdentityName = null;</text>
            }

        @if (Env.IsLocal)
	    {
		    <text>_bl.mediaServerBaseUrl = "@settings.LocalFileUploadLocation/";</text>
	    }
	    else
	    {
		    <text>_bl.mediaServerBaseUrl = "http://@settings.MediaServerHost/";</text>
	    }

        _bl.env = "@Env.Name.ToLower()";
        _bl.debuggingEnabled = @HttpContext.Current.IsDebuggingEnabled.ToString().ToLower();
        _bl.signout = (function(so){
            return so;
        })(@Request["so"]);
    </script>

    @if (Env.IsProd)
    {
        <script type="text/javascript">
            window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var n=t.forceSSL||"https:"===document.location.protocol,a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=(n?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(a,o);for(var r=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["clearEventProperties","identify","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=r(p[c])};
            heap.load("1293843340");
        </script>
    }

</head>
<body>
    
    @if (Env.IsProd)
    {
     <!-- Google Tag Manager -->
        <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-N8NQJG"height="0" width="0" style="display:none;visibility:hidden">
        </iframe></noscript><script>
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-N8NQJG');</script>
    <!-- End Google Tag Manager -->
    }

    @((ViewBag.ShowLoader != null && ViewBag.ShowLoader) ? MvcHtmlString.Create(@"
<div class='loading'>
	<div class='spinner'>
		<div class='bounce1'></div>
		<div class='bounce2'></div>
		<div class='bounce3'></div>
	</div>
</div>") : MvcHtmlString.Empty)
    @Html.Partial("_Nav-bs3")
    <div class="container-fluid">
        @RenderBody()
        <div id="push"></div>
    </div>

    @Scripts.Render("~/scripts/assets")
    @RenderSection("scripts", required: false)
</body>
</html>
